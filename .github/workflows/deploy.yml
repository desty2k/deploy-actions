name: deploy

on:
  release:
    types: [published]
    tags:
      - 'v*'

jobs:
  get-release-tag:
    name: Get version tag from latest release
    run: |
      git fetch --tags
      git fetch --prune --unshallow || true
      git describe --abbrev=0 --tags > release_version.txt
      echo "RELEASE_VERSION=$(cat release_version.txt)" | tr -d '\r\t\n' >> $GITHUB_ENV
      echo "${{env.RELEASE_VERSION}}"

  deploy-pypi-test:
    name: Deploy to PyPI test server
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi --skip-existing --verbose dist/*

  deploy-pypi:
    needs: [deploy-test]
    name: Deploy to PyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --skip-existing --verbose dist/*

  deploy-docker:
    name: Create and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            desty2k/QtPyBotnet:latest
            desty2k/QtPyBotnet:${{env.RELEASE_VERSION}}
          platforms: linux/amd64,linux/arm64,linux/386

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
