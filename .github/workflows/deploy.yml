name: deploy

on:
  release:
    types: [published]
    tags:
      - 'v*'

jobs:
  deploy-pypi-test:
    name: Deploy to PyPI test server
    runs-on: ubuntu-latest
    needs: [get-release-tag]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi --skip-existing --verbose dist/*

  deploy-pypi:
    needs: [deploy-pypi-test]
    name: Deploy to PyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --skip-existing --verbose dist/*

  deploy-docker:
    name: Create and publish Docker image
    runs-on: ubuntu-latest
    needs: [get-release-tag]

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/386

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
